[
    {
        "id": "e20a139463f45cc6",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b0dfef0a9d40f18c",
        "type": "mqtt in",
        "z": "e20a139463f45cc6",
        "name": "Sensors",
        "topic": "neslabpolimi/smartcity/milan",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "14cb858f3f752af2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 340,
        "wires": [
            [
                "a25ccfdd36c47411",
                "327e2c021007a43e"
            ]
        ]
    },
    {
        "id": "a25ccfdd36c47411",
        "type": "debug",
        "z": "e20a139463f45cc6",
        "name": "Dump Message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 280,
        "wires": []
    },
    {
        "id": "327e2c021007a43e",
        "type": "function",
        "z": "e20a139463f45cc6",
        "name": "Process Topic",
        "func": "\nif (msg.payload.fields.hasOwnProperty(\"temperature\")) {\n    let oldWindow = context.get(\"window\");\n    if (oldWindow.length == 10) {\n        // Remove only first index\n        oldWindow.splice(0, 1);\n    }\n    oldWindow.push(Number(msg.payload.fields.temperature));\n    context.set(\"window\", oldWindow);\n\n    let sum = 0;\n    for (let i = 0; i < oldWindow.length; i++) {\n        sum += oldWindow[i];\n    }\n    let average = sum / oldWindow.length;\n\n    global.set(\"average\", average);\n\n    let newPayload = {\n        average: average,\n        window : oldWindow,\n    };\n    // Just for debugging purposes\n    let newMsg = {\n        _msgid: msg._msgid,\n        payload : newPayload,\n        topic: msg.topic,\n    };\n    return newMsg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "let window = [];\ncontext.set(\"window\", window);\n// Initialized as 0\nglobal.set(\"average\", 0);",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 340,
        "wires": [
            [
                "c613abdae16cc501"
            ]
        ]
    },
    {
        "id": "c613abdae16cc501",
        "type": "debug",
        "z": "e20a139463f45cc6",
        "name": "Print Average Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 340,
        "wires": []
    },
    {
        "id": "56225192305d5e1d",
        "type": "inject",
        "z": "e20a139463f45cc6",
        "name": "Every Minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 460,
        "wires": [
            [
                "0d0db6d1294fafbc"
            ]
        ]
    },
    {
        "id": "0d0db6d1294fafbc",
        "type": "openweathermap",
        "z": "e20a139463f45cc6",
        "name": "Milan Temperature",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Milan",
        "country": "IT",
        "language": "en",
        "x": 570,
        "y": 460,
        "wires": [
            [
                "a897ac16e2c016c6",
                "27a2f82990b09382"
            ]
        ]
    },
    {
        "id": "a897ac16e2c016c6",
        "type": "function",
        "z": "e20a139463f45cc6",
        "name": "Compare Temperature",
        "func": "let average = global.get(\"average\");\n\n// Suppose it is always present, as in lab exercise\nlet tempk = msg.payload.tempk;\nlet difference = Math.abs(average - tempk);\nlet coherency;\nif (difference > global.get(\"K\")){\n    coherency = \"Temperature data is not coherent!\";\n\n    let newMsg = {\n    _msgid: msg._msgid,\n    payload : coherency,\n    };\n\n    return [newMsg, null];\n} else {\n    // For debugging purposes\n    coherency = \"Temperature data is coherent!\"\n    let newMsg = {\n    _msgid: msg._msgid,\n    payload : coherency,\n    };\n    return [null, newMsg];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 460,
        "wires": [
            [
                "337f169875f85af2",
                "25251eddc3c4876d"
            ],
            [
                "662cf7b38a7dc451"
            ]
        ]
    },
    {
        "id": "778e855f64bbe51e",
        "type": "mqtt in",
        "z": "e20a139463f45cc6",
        "name": "Get K",
        "topic": "neslabpolimi/nsds/eval24/k",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "14cb858f3f752af2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 560,
        "wires": [
            [
                "62dbd7151a5ee423",
                "a84f0d3c90c06812"
            ]
        ]
    },
    {
        "id": "62dbd7151a5ee423",
        "type": "debug",
        "z": "e20a139463f45cc6",
        "name": "Print K",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 620,
        "wires": []
    },
    {
        "id": "a84f0d3c90c06812",
        "type": "function",
        "z": "e20a139463f45cc6",
        "name": "Set K",
        "func": "\nif (typeof msg.payload === \"number\"){\n    let K = msg.payload;\n    global.set(\"K\", K);\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"K\", 0);",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "337f169875f85af2",
        "type": "mqtt out",
        "z": "e20a139463f45cc6",
        "name": "Publish Coherency",
        "topic": " neslabpolimi/nsds/eval24/alarm",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "14cb858f3f752af2",
        "x": 1090,
        "y": 420,
        "wires": []
    },
    {
        "id": "25251eddc3c4876d",
        "type": "debug",
        "z": "e20a139463f45cc6",
        "name": "Print Message Not Coherent",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 480,
        "wires": []
    },
    {
        "id": "27a2f82990b09382",
        "type": "debug",
        "z": "e20a139463f45cc6",
        "name": "Check OpenWeather",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 540,
        "wires": []
    },
    {
        "id": "662cf7b38a7dc451",
        "type": "debug",
        "z": "e20a139463f45cc6",
        "name": "Coherent",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 600,
        "wires": []
    },
    {
        "id": "14cb858f3f752af2",
        "type": "mqtt-broker",
        "name": "Neslab",
        "broker": "mqtt.neslab.it",
        "port": "3200",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]